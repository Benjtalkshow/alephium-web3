/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ContractInstance, groupOfAddress } from "@alephium/web3";
import { DeployContractExecutionResult } from "@alephium/cli";

export function loadContractInstanceFromDeployments<T extends ContractInstance>(
  allDeployments: {
    deployerAddress: string;
    contracts: Record<string, DeployContractExecutionResult>;
  }[],
  contractName: string,
  group?: number,
  taskId?: string
): T | undefined {
  const deployments =
    group === undefined
      ? allDeployments[0]
      : allDeployments.find((d) => groupOfAddress(d.deployerAddress));
  if (deployments === undefined) {
    return undefined;
  }
  const result =
    taskId === undefined
      ? deployments.contracts[contractName]
      : deployments.contracts[taskId.replace(/[:-]/g, "_")];
  if (result === undefined) {
    return undefined;
  }
  return result.contractInstance as T;
}
