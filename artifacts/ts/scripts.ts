/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Token,
  SignExecuteScriptTxResult,
  Script,
  SignerProvider,
  HexString,
} from "@alephium/web3";
import { default as GreeterMainScriptJson } from "../greeter_main.ral.json";
import { default as MainScriptJson } from "../main.ral.json";

export namespace GreeterMain {
  export async function execute(
    signer: SignerProvider,
    initFields: { greeterContractId: HexString },
    executeParams?: {
      attoAlphAmount?: bigint;
      tokens?: Token[];
      gasAmount?: number;
      gasPrice?: bigint;
    }
  ): Promise<SignExecuteScriptTxResult> {
    return script.execute(signer, {
      initialFields: initFields,
      attoAlphAmount: executeParams?.attoAlphAmount,
      tokens: executeParams?.tokens,
      gasAmount: executeParams?.gasAmount,
      gasPrice: executeParams?.gasPrice,
    });
  }

  export const script = Script.fromJson(GreeterMainScriptJson);
}

export namespace Main {
  export async function execute(
    signer: SignerProvider,
    initFields: { addContractId: HexString },
    executeParams?: {
      attoAlphAmount?: bigint;
      tokens?: Token[];
      gasAmount?: number;
      gasPrice?: bigint;
    }
  ): Promise<SignExecuteScriptTxResult> {
    return script.execute(signer, {
      initialFields: initFields,
      attoAlphAmount: executeParams?.attoAlphAmount,
      tokens: executeParams?.tokens,
      gasAmount: executeParams?.gasAmount,
      gasPrice: executeParams?.gasPrice,
    });
  }

  export const script = Script.fromJson(MainScriptJson);
}
